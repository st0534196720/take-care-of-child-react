{"version":3,"sources":["comps/ShowImage.js","comps/ShowKids.js","comps/AddKid.js","App.js","reportWebVitals.js","index.js"],"names":["makeStyles","theme","root","flexGrow","image","height","width","display","flexWrap","justifyContent","overflow","backgroundColor","pink","gridList","icon","color","useStyles","spacing","createStyles","margin","routes","appBar","marginBottom","alignText","textAlign","AddKid","classes","useState","KidId","KidIdentityNumber","KidFirstName","KidLastName","KidImgUrl","ParentPhone","ParentGmail","IsActive","kinderGartenId","kid","setKid","message","setMessage","changeHandler","value","key","prevKid","console","log","FormGroup","TextField","className","label","variant","onChange","e","target","InputProps","startAdornment","InputAdornment","position","Button","onClick","fetch","headers","method","then","response","json","res","body","JSON","stringify","text","Typography","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2eb4a6de.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    }, \r\n    image: {\r\n        height: '60%',\r\n        width: '50%'\r\n        \r\n    }\r\n}));\r\n\r\nexport default function ShowImage({ image }) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid item>            \r\n                <img alt=\"kid\" src={image} className={classes.image} />               \r\n        </Grid>\r\n    );\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport ShowImage from \"./ShowImage\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport React from 'react';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport { pink } from \"@material-ui/core/colors\";\r\n// import IconButton from '@material-ui/core/IconButton';\r\n// import InfoIcon from '@material-ui/icons/Info';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'space-around',\r\n        overflow: 'hidden',\r\n        backgroundColor: pink,\r\n    },\r\n    gridList: {\r\n        width: '90%',\r\n        height: '100%',\r\n    },\r\n    icon: {\r\n        color: 'rgba(255, 255, 255, 0.54)',\r\n    },\r\n}));\r\n\r\nexport default function ShowKids() {\r\n    const [error, setError] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [kids, setKids] = useState([]);\r\n    const classes = useStyles();\r\n\r\n\r\n    useEffect(() => {\r\n        fetch(\"http://localhost:54147/api/Kid/GetKids\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    setIsLoaded(true);\r\n                    setKids(result);\r\n                },\r\n                //catch:\r\n                (error) => {\r\n                    setIsLoaded(true);\r\n                    setError(error);\r\n                }\r\n            )\r\n    }, [])\r\n\r\n\r\n    if (error) {\r\n        return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n        return <div>Loading...</div>;\r\n    } else {\r\n        return (\r\n            <div className={classes.root}>\r\n                <GridList spacing={10} cols={6} cellHeight={200} cellWidth={200} className={classes.gridList}>\r\n                    {/* <GridListTile key=\"Subheader\" cols={2} style={{ height: 'auto' }}>\r\n                        <ListSubheader component=\"div\">Kids</ListSubheader>\r\n                    </GridListTile> */}\r\n                    {\r\n                        kids.map(kid => (\r\n                            <GridListTile key={kid.KidId}>\r\n                                <ShowImage image={kid.KidImgUrl} />\r\n                                <GridListTileBar\r\n                                    title={kid.KidFirstName}\r\n                                    subtitle={<span>Phone: {kid.ParentPhone}</span>}\r\n                                    // actionIcon={\r\n                                    //     <IconButton aria-label={`info about ${kid.KidFirstName}`} className={classes.icon}>\r\n                                    //         <InfoIcon />\r\n                                    //     </IconButton>\r\n                                    // }\r\n                                />\r\n                            </GridListTile>\r\n                        ))\r\n                    }\r\n                </GridList>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useState } from 'react'\r\n\r\nimport {\r\n    Button,\r\n    createStyles,\r\n    FormGroup,\r\n    InputAdornment,\r\n    makeStyles,\r\n    TextField,\r\n    Typography,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(({ spacing }) =>\r\n    createStyles({\r\n        root: {\r\n            display: \"flex\",\r\n            flexWrap: \"wrap\",\r\n            \"& > *\": {\r\n                margin: \"auto\",\r\n                width: \"25vw\",\r\n            },\r\n        },\r\n        routes: {\r\n            width: \"50%\",\r\n        },\r\n        appBar: {\r\n            marginBottom: \"10px\",\r\n        },\r\n        margin: {\r\n            margin: spacing(2),\r\n        },\r\n        alignText: {\r\n            textAlign: \"center\",\r\n        },\r\n    })\r\n);\r\n\r\nfunction AddKid() {\r\n\r\n    const classes = useStyles();\r\n    const [kid, setKid] = useState({\r\n        KidId: 1030,\r\n        KidIdentityNumber: \"\",\r\n        KidFirstName: \"\",\r\n        KidLastName: \"\",\r\n        KidImgUrl: \"\",\r\n        ParentPhone: \"\",\r\n        ParentGmail: \"\",\r\n        IsActive: true,\r\n        kinderGartenId: 100,\r\n    });\r\n\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    const changeHandler = (value, key) => {\r\n        setKid((prevKid) => ({ ...prevKid, [key]: value }))\r\n        console.log(\"-----------\");\r\n        console.log(kid.KidIdentityNumber);\r\n    };\r\n\r\n    const addHandler = () => {\r\n        fetch(`http://localhost:54147/api/kid/GetKidByIdentityNumber/${kid.KidIdentityNumber}`, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            }, method: \"GET\",\r\n\r\n        })\r\n            .then((response) => response.json())\r\n            .then((res) => {\r\n                if (res && res.KidIdentityNumber) {\r\n                    setMessage(`A kid with identity number: ${kid.KidIdentityNumber} is exist`);\r\n                } else {\r\n                    fetch('http://localhost:54147/api/kid/AddKid', {\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\",\r\n                        },\r\n                        method: \"POST\",\r\n                        body: JSON.stringify(kid),\r\n                    }).then((response) => response.text())\r\n                        .then((res) => setMessage(res));\r\n                }\r\n            });\r\n    };\r\n\r\n    return (\r\n        // <form className={classes.root} noValidate autoComplete=\"off\">\r\n        //     <TextField  label=\"firstName\" variant=\"filled\"/>\r\n        //     <TextField label=\"lastName\" variant=\"filled\" />\r\n        //     <TextField label=\"Phone\" variant=\"filled\" />\r\n        //     <input type=\"submit\"></input>\r\n        // </form>\r\n        <div >\r\n\r\n            <FormGroup>\r\n                <TextField\r\n                    className={classes.margin}\r\n                    label=\"identity number\"\r\n                    variant=\"outlined\"\r\n                    value={kid.KidIdentityNumber}\r\n                    onChange={(e) => {\r\n                        changeHandler(e.target.value, \"KidIdentityNumber\");\r\n                    }}\r\n                />\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <TextField\r\n                    className={classes.margin}\r\n                    label=\"first name\"\r\n                    variant=\"outlined\"\r\n                    value={kid.KidFirstName}\r\n                    onChange={(e) => {\r\n                        changeHandler(e.target.value, \"KidFirstName\");\r\n                    }}\r\n                    InputProps={{\r\n                        startAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                                {/*<AccountCircleIcon />*/}\r\n                            </InputAdornment>\r\n                        ),\r\n                    }}\r\n                />\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <Button\r\n                    className={classes.margin}\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={addHandler}\r\n                >\r\n                    Submit\r\n                </Button>\r\n            </FormGroup>\r\n\r\n            <Typography className={classes.alignText}>{message}</Typography>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default AddKid;\r\n","import ShowKids from \"./comps/ShowKids\";\nimport React from 'react';\nimport AddKid from './comps/AddKid'\n\nfunction App() {\n  return (\n    //<ShowKids></ShowKids>\n     <AddKid></AddKid>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}